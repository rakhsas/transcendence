version: "3.8"

services:
  auth:
    container_name: auth
    image: auth
    hostname: rakhsas.com
    build:
      context: ./auth
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./auth:/app
      - node_modules_auth:/app/node_modules
    networks:
      - backend
  frontend:
    container_name: frontend
    image: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    depends_on:
      - auth
    networks:
      - backend
    volumes:
      - ./frontend:/app
      - node_modules_front:/app/node_modules
  nginx:
    image: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    # volumes:
    #   - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "443:443"
      - "80:80"
    networks:
      - backend
    depends_on:
      - frontend
  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - potgres_data:/var/lib/postgresql/data
    networks:
      - backend
    env_file: ./.env
    restart: always
  adminer:
    container_name: adminer
    image: adminer
    ports:
      - "8081:8080"
    networks:
      - backend
    restart: always
networks:
  backend:
    name: backend
    # external: true

# entryPoints:
#   web:
#     address: ":80"
volumes:
  node_modules_auth:
    name: node_modules_auth
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./auth/node_modules
  node_modules_front:
    name: node_modules_front
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./frontend/node_modules
  potgres_data:
    name: postgres_data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./postgres