<ref *2> IncomingMessage {

  _readableState: ReadableState {

    highWaterMark: 16384,

    buffer: BufferList { head: null, tail: null, length: 0 },

    length: 0,

    pipes: [],

    awaitDrainWriters: null,

    [Symbol(kState)]: 1185840

  },

  _events: [Object: null prototype] {},

  _eventsCount: 0,

  _maxListeners: undefined,

  socket: <ref *1> Socket {

    connecting: false,

    _hadError: false,

    _parent: null,

    _host: null,

    _closeAfterHandlingError: false,

    _readableState: ReadableState {

      highWaterMark: 16384,

      buffer: BufferList { head: null, tail: null, length: 0 },

      length: 0,

      pipes: [],

      awaitDrainWriters: null,

      [Symbol(kState)]: 59773016

    },

    _events: [Object: null prototype] {

      end: [Array],

      timeout: [Function: socketOnTimeout],

      data: [Function: bound socketOnData],

      error: [Function: socketOnError],

      close: [Array],

      drain: [Function: bound socketOnDrain],

      resume: [Function: onSocketResume],

      pause: [Function: onSocketPause]

    },

    _eventsCount: 8,

    _maxListeners: undefined,

    _writableState: WritableState {

      highWaterMark: 16384,

      length: 0,

      corked: 0,

      onwrite: [Function: bound onwrite],

      writelen: 0,

      bufferedIndex: 0,

      pendingcb: 0,

      [Symbol(kState)]: 34340940,

      [Symbol(kBufferedValue)]: null

    },

    allowHalfOpen: true,

    _sockname: null,

    _pendingData: null,

    _pendingEncoding: '',

    server: Server {

      maxHeaderSize: undefined,

      insecureHTTPParser: undefined,

      requestTimeout: 300000,

      headersTimeout: 60000,

      keepAliveTimeout: 5000,

      connectionsCheckingInterval: 30000,

      requireHostHeader: true,

      joinDuplicateHeaders: undefined,

      rejectNonStandardBodyWrites: false,

      _events: [Object: null prototype],

      _eventsCount: 3,

      _maxListeners: undefined,

      _connections: 3,

      _handle: [TCP],

      _usingWorkers: false,

      _workers: [],

      _unref: false,

      allowHalfOpen: true,

      pauseOnConnect: false,

      noDelay: true,

      keepAlive: false,

      keepAliveInitialDelay: 0,

      highWaterMark: 16384,

      httpAllowHalfOpen: false,

      timeout: 0,

      maxHeadersCount: null,

      maxRequestsPerSocket: 0,

      _connectionKey: '6::::3000',

      [Symbol(IncomingMessage)]: [Function: IncomingMessage],

      [Symbol(ServerResponse)]: [Function: ServerResponse],

      [Symbol(kCapture)]: false,

      [Symbol(async_id_symbol)]: 40,

      [Symbol(kUniqueHeaders)]: null,

      [Symbol(http.server.connections)]: ConnectionsList {},

      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {

        _idleTimeout: 30000,

        _idlePrev: [TimersList],

        _idleNext: [TimersList],

        _idleStart: 6920,

        _onTimeout: [Function: bound checkConnections],

        _timerArgs: undefined,

        _repeat: 30000,

        _destroyed: false,

        [Symbol(refed)]: false,

        [Symbol(kHasPrimitive)]: false,

        [Symbol(asyncId)]: 42,

        [Symbol(triggerId)]: 41

      }

    },

    _server: Server {

      maxHeaderSize: undefined,

      insecureHTTPParser: undefined,

      requestTimeout: 300000,

      headersTimeout: 60000,

      keepAliveTimeout: 5000,

      connectionsCheckingInterval: 30000,

      requireHostHeader: true,

      joinDuplicateHeaders: undefined,

      rejectNonStandardBodyWrites: false,

      _events: [Object: null prototype],

      _eventsCount: 3,

      _maxListeners: undefined,

      _connections: 3,

      _handle: [TCP],

      _usingWorkers: false,

      _workers: [],

      _unref: false,

      allowHalfOpen: true,

      pauseOnConnect: false,

      noDelay: true,

      keepAlive: false,

      keepAliveInitialDelay: 0,

      highWaterMark: 16384,

      httpAllowHalfOpen: false,

      timeout: 0,

      maxHeadersCount: null,

      maxRequestsPerSocket: 0,

      _connectionKey: '6::::3000',

      [Symbol(IncomingMessage)]: [Function: IncomingMessage],

      [Symbol(ServerResponse)]: [Function: ServerResponse],

      [Symbol(kCapture)]: false,

      [Symbol(async_id_symbol)]: 40,

      [Symbol(kUniqueHeaders)]: null,

      [Symbol(http.server.connections)]: ConnectionsList {},

      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {

        _idleTimeout: 30000,

        _idlePrev: [TimersList],

        _idleNext: [TimersList],

        _idleStart: 6920,

        _onTimeout: [Function: bound checkConnections],

        _timerArgs: undefined,

        _repeat: 30000,

        _destroyed: false,

        [Symbol(refed)]: false,

        [Symbol(kHasPrimitive)]: false,

        [Symbol(asyncId)]: 42,

        [Symbol(triggerId)]: 41

      }

    },

    parser: HTTPParser {

      '0': null,

      '1': [Function: parserOnHeaders],

      '2': [Function: parserOnHeadersComplete],

      '3': [Function: parserOnBody],

      '4': [Function: parserOnMessageComplete],

      '5': [Function: bound onParserExecute],

      '6': [Function: bound onParserTimeout],

      _headers: [],

      _url: '',

      socket: [Circular *1],

      incoming: [Circular *2],

      outgoing: null,

      maxHeaderPairs: 2000,

      _consumed: true,

      onIncoming: [Function: bound parserOnIncoming],

      joinDuplicateHeaders: null,

      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]

    },

    on: [Function: socketListenerWrap],

    addListener: [Function: socketListenerWrap],

    prependListener: [Function: socketListenerWrap],

    setEncoding: [Function: socketSetEncoding],

    _paused: false,

    _httpMessage: ServerResponse {

      _events: [Object: null prototype],

      _eventsCount: 1,

      _maxListeners: undefined,

      outputData: [],

      outputSize: 0,

      writable: true,

      destroyed: false,

      _last: false,

      chunkedEncoding: false,

      shouldKeepAlive: true,

      maxRequestsOnConnectionReached: false,

      _defaultKeepAlive: true,

      useChunkedEncodingByDefault: true,

      sendDate: true,

      _removedConnection: false,

      _removedContLen: false,

      _removedTE: false,

      strictContentLength: false,

      _contentLength: null,

      _hasBody: true,

      _trailer: '',

      finished: false,

      _headerSent: false,

      _closed: false,

      socket: [Circular *1],

      _header: null,

      _keepAliveTimeout: 5000,

      _onPendingData: [Function: bound updateOutgoingData],

      req: [Circular *2],

      _sent100: false,

      _expect_continue: false,

      _maxRequestsPerSocket: 0,

      locals: [Object: null prototype] {},

      [Symbol(kCapture)]: false,

      [Symbol(kBytesWritten)]: 0,

      [Symbol(kNeedDrain)]: false,

      [Symbol(corked)]: 0,

      [Symbol(kOutHeaders)]: [Object: null prototype],

      [Symbol(errored)]: null,

      [Symbol(kHighWaterMark)]: 16384,

      [Symbol(kRejectNonStandardBodyWrites)]: false,

      [Symbol(kUniqueHeaders)]: null

    },

    [Symbol(async_id_symbol)]: 166,

    [Symbol(kHandle)]: TCP {

      reading: true,

      onconnection: null,

      _consumed: true,

      [Symbol(owner_symbol)]: [Circular *1]

    },

    [Symbol(lastWriteQueueSize)]: 0,

    [Symbol(timeout)]: null,

    [Symbol(kBuffer)]: null,

    [Symbol(kBufferCb)]: null,

    [Symbol(kBufferGen)]: null,

    [Symbol(kCapture)]: false,

    [Symbol(kSetNoDelay)]: true,

    [Symbol(kSetKeepAlive)]: false,

    [Symbol(kSetKeepAliveInitialDelay)]: 0,

    [Symbol(kBytesRead)]: 0,

    [Symbol(kBytesWritten)]: 0

  },

  httpVersionMajor: 1,

  httpVersionMinor: 1,

  httpVersion: '1.1',

  complete: false,

  rawHeaders: [

    'Host',

    'localhost:3000',

    'Connection',

    'keep-alive',

    'sec-ch-ua',

    '"Not/A)Brand";v="99", "Google Chrome";v="115", "Chromium";v="115"',

    'sec-ch-ua-mobile',

    '?0',

    'User-Agent',

    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36',

    'sec-ch-ua-platform',

    '"macOS"',

    'Accept',

    '*/*',

    'Origin',

    'http://localhost:4200',

    'Sec-Fetch-Site',

    'same-site',

    'Sec-Fetch-Mode',

    'cors',

    'Sec-Fetch-Dest',

    'empty',

    'Referer',

    'http://localhost:4200/',

    'Accept-Encoding',

    'gzip, deflate, br',

    'Accept-Language',

    'en-US,en;q=0.9,fr;q=0.8'

  ],

  rawTrailers: [],

  joinDuplicateHeaders: null,

  aborted: false,

  upgrade: false,

  url: '/api/user/95248',

  method: 'GET',

  statusCode: null,

  statusMessage: null,

  client: <ref *1> Socket {

    connecting: false,

    _hadError: false,

    _parent: null,

    _host: null,

    _closeAfterHandlingError: false,

    _readableState: ReadableState {

      highWaterMark: 16384,

      buffer: BufferList { head: null, tail: null, length: 0 },

      length: 0,

      pipes: [],

      awaitDrainWriters: null,

      [Symbol(kState)]: 59773016

    },

    _events: [Object: null prototype] {

      end: [Array],

      timeout: [Function: socketOnTimeout],

      data: [Function: bound socketOnData],

      error: [Function: socketOnError],

      close: [Array],

      drain: [Function: bound socketOnDrain],

      resume: [Function: onSocketResume],

      pause: [Function: onSocketPause]

    },

    _eventsCount: 8,

    _maxListeners: undefined,

    _writableState: WritableState {

      highWaterMark: 16384,

      length: 0,

      corked: 0,

      onwrite: [Function: bound onwrite],

      writelen: 0,

      bufferedIndex: 0,

      pendingcb: 0,

      [Symbol(kState)]: 34340940,

      [Symbol(kBufferedValue)]: null

    },

    allowHalfOpen: true,

    _sockname: null,

    _pendingData: null,

    _pendingEncoding: '',

    server: Server {

      maxHeaderSize: undefined,

      insecureHTTPParser: undefined,

      requestTimeout: 300000,

      headersTimeout: 60000,

      keepAliveTimeout: 5000,

      connectionsCheckingInterval: 30000,

      requireHostHeader: true,

      joinDuplicateHeaders: undefined,

      rejectNonStandardBodyWrites: false,

      _events: [Object: null prototype],

      _eventsCount: 3,

      _maxListeners: undefined,

      _connections: 3,

      _handle: [TCP],

      _usingWorkers: false,

      _workers: [],

      _unref: false,

      allowHalfOpen: true,

      pauseOnConnect: false,

      noDelay: true,

      keepAlive: false,

      keepAliveInitialDelay: 0,

      highWaterMark: 16384,

      httpAllowHalfOpen: false,

      timeout: 0,

      maxHeadersCount: null,

      maxRequestsPerSocket: 0,

      _connectionKey: '6::::3000',

      [Symbol(IncomingMessage)]: [Function: IncomingMessage],

      [Symbol(ServerResponse)]: [Function: ServerResponse],

      [Symbol(kCapture)]: false,

      [Symbol(async_id_symbol)]: 40,

      [Symbol(kUniqueHeaders)]: null,

      [Symbol(http.server.connections)]: ConnectionsList {},

      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {

        _idleTimeout: 30000,

        _idlePrev: [TimersList],

        _idleNext: [TimersList],

        _idleStart: 6920,

        _onTimeout: [Function: bound checkConnections],

        _timerArgs: undefined,

        _repeat: 30000,

        _destroyed: false,

        [Symbol(refed)]: false,

        [Symbol(kHasPrimitive)]: false,

        [Symbol(asyncId)]: 42,

        [Symbol(triggerId)]: 41

      }

    },

    _server: Server {

      maxHeaderSize: undefined,

      insecureHTTPParser: undefined,

      requestTimeout: 300000,

      headersTimeout: 60000,

      keepAliveTimeout: 5000,

      connectionsCheckingInterval: 30000,

      requireHostHeader: true,

      joinDuplicateHeaders: undefined,

      rejectNonStandardBodyWrites: false,

      _events: [Object: null prototype],

      _eventsCount: 3,

      _maxListeners: undefined,

      _connections: 3,

      _handle: [TCP],

      _usingWorkers: false,

      _workers: [],

      _unref: false,

      allowHalfOpen: true,

      pauseOnConnect: false,

      noDelay: true,

      keepAlive: false,

      keepAliveInitialDelay: 0,

      highWaterMark: 16384,

      httpAllowHalfOpen: false,

      timeout: 0,

      maxHeadersCount: null,

      maxRequestsPerSocket: 0,

      _connectionKey: '6::::3000',

      [Symbol(IncomingMessage)]: [Function: IncomingMessage],

      [Symbol(ServerResponse)]: [Function: ServerResponse],

      [Symbol(kCapture)]: false,

      [Symbol(async_id_symbol)]: 40,

      [Symbol(kUniqueHeaders)]: null,

      [Symbol(http.server.connections)]: ConnectionsList {},

      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {

        _idleTimeout: 30000,

        _idlePrev: [TimersList],

        _idleNext: [TimersList],

        _idleStart: 6920,

        _onTimeout: [Function: bound checkConnections],

        _timerArgs: undefined,

        _repeat: 30000,

        _destroyed: false,

        [Symbol(refed)]: false,

        [Symbol(kHasPrimitive)]: false,

        [Symbol(asyncId)]: 42,

        [Symbol(triggerId)]: 41

      }

    },

    parser: HTTPParser {

      '0': null,

      '1': [Function: parserOnHeaders],

      '2': [Function: parserOnHeadersComplete],

      '3': [Function: parserOnBody],

      '4': [Function: parserOnMessageComplete],

      '5': [Function: bound onParserExecute],

      '6': [Function: bound onParserTimeout],

      _headers: [],

      _url: '',

      socket: [Circular *1],

      incoming: [Circular *2],

      outgoing: null,

      maxHeaderPairs: 2000,

      _consumed: true,

      onIncoming: [Function: bound parserOnIncoming],

      joinDuplicateHeaders: null,

      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]

    },

    on: [Function: socketListenerWrap],

    addListener: [Function: socketListenerWrap],

    prependListener: [Function: socketListenerWrap],

    setEncoding: [Function: socketSetEncoding],

    _paused: false,

    _httpMessage: ServerResponse {

      _events: [Object: null prototype],

      _eventsCount: 1,

      _maxListeners: undefined,

      outputData: [],

      outputSize: 0,

      writable: true,

      destroyed: false,

      _last: false,

      chunkedEncoding: false,

      shouldKeepAlive: true,

      maxRequestsOnConnectionReached: false,

      _defaultKeepAlive: true,

      useChunkedEncodingByDefault: true,

      sendDate: true,

      _removedConnection: false,

      _removedContLen: false,

      _removedTE: false,

      strictContentLength: false,

      _contentLength: null,

      _hasBody: true,

      _trailer: '',

      finished: false,

      _headerSent: false,

      _closed: false,

      socket: [Circular *1],

      _header: null,

      _keepAliveTimeout: 5000,

      _onPendingData: [Function: bound updateOutgoingData],

      req: [Circular *2],

      _sent100: false,

      _expect_continue: false,

      _maxRequestsPerSocket: 0,

      locals: [Object: null prototype] {},

      [Symbol(kCapture)]: false,

      [Symbol(kBytesWritten)]: 0,

      [Symbol(kNeedDrain)]: false,

      [Symbol(corked)]: 0,

      [Symbol(kOutHeaders)]: [Object: null prototype],

      [Symbol(errored)]: null,

      [Symbol(kHighWaterMark)]: 16384,

      [Symbol(kRejectNonStandardBodyWrites)]: false,

      [Symbol(kUniqueHeaders)]: null

    },

    [Symbol(async_id_symbol)]: 166,

    [Symbol(kHandle)]: TCP {

      reading: true,

      onconnection: null,

      _consumed: true,

      [Symbol(owner_symbol)]: [Circular *1]

    },

    [Symbol(lastWriteQueueSize)]: 0,

    [Symbol(timeout)]: null,

    [Symbol(kBuffer)]: null,

    [Symbol(kBufferCb)]: null,

    [Symbol(kBufferGen)]: null,

    [Symbol(kCapture)]: false,

    [Symbol(kSetNoDelay)]: true,

    [Symbol(kSetKeepAlive)]: false,

    [Symbol(kSetKeepAliveInitialDelay)]: 0,

    [Symbol(kBytesRead)]: 0,

    [Symbol(kBytesWritten)]: 0

  },

  _consuming: false,

  _dumped: false,

  next: [Function: next],

  baseUrl: '',

  originalUrl: '/api/user/95248',

  _parsedUrl: Url {

    protocol: null,

    slashes: null,

    auth: null,

    host: null,

    port: null,

    hostname: null,

    hash: null,

    search: null,

    query: null,

    pathname: '/api/user/95248',

    path: '/api/user/95248',

    href: '/api/user/95248',

    _raw: '/api/user/95248'

  },

  params: { id: '95248' },

  query: {},

  res: <ref *3> ServerResponse {

    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },

    _eventsCount: 1,

    _maxListeners: undefined,

    outputData: [],

    outputSize: 0,

    writable: true,

    destroyed: false,

    _last: false,

    chunkedEncoding: false,

    shouldKeepAlive: true,

    maxRequestsOnConnectionReached: false,

    _defaultKeepAlive: true,

    useChunkedEncodingByDefault: true,

    sendDate: true,

    _removedConnection: false,

    _removedContLen: false,

    _removedTE: false,

    strictContentLength: false,

    _contentLength: null,

    _hasBody: true,

    _trailer: '',

    finished: false,

    _headerSent: false,

    _closed: false,

    socket: <ref *1> Socket {

      connecting: false,

      _hadError: false,

      _parent: null,

      _host: null,

      _closeAfterHandlingError: false,

      _readableState: [ReadableState],

      _events: [Object: null prototype],

      _eventsCount: 8,

      _maxListeners: undefined,

      _writableState: [WritableState],

      allowHalfOpen: true,

      _sockname: null,

      _pendingData: null,

      _pendingEncoding: '',

      server: [Server],

      _server: [Server],

      parser: [HTTPParser],

      on: [Function: socketListenerWrap],

      addListener: [Function: socketListenerWrap],

      prependListener: [Function: socketListenerWrap],

      setEncoding: [Function: socketSetEncoding],

      _paused: false,

      _httpMessage: [Circular *3],

      [Symbol(async_id_symbol)]: 166,

      [Symbol(kHandle)]: [TCP],

      [Symbol(lastWriteQueueSize)]: 0,

      [Symbol(timeout)]: null,

      [Symbol(kBuffer)]: null,

      [Symbol(kBufferCb)]: null,

      [Symbol(kBufferGen)]: null,

      [Symbol(kCapture)]: false,

      [Symbol(kSetNoDelay)]: true,

      [Symbol(kSetKeepAlive)]: false,

      [Symbol(kSetKeepAliveInitialDelay)]: 0,

      [Symbol(kBytesRead)]: 0,

      [Symbol(kBytesWritten)]: 0

    },

    _header: null,

    _keepAliveTimeout: 5000,

    _onPendingData: [Function: bound updateOutgoingData],

    req: [Circular *2],

    _sent100: false,

    _expect_continue: false,

    _maxRequestsPerSocket: 0,

    locals: [Object: null prototype] {},

    [Symbol(kCapture)]: false,

    [Symbol(kBytesWritten)]: 0,

    [Symbol(kNeedDrain)]: false,

    [Symbol(corked)]: 0,

    [Symbol(kOutHeaders)]: [Object: null prototype] {

      'x-powered-by': [Array],

      'access-control-allow-origin': [Array],

      vary: [Array]

    },

    [Symbol(errored)]: null,

    [Symbol(kHighWaterMark)]: 16384,

    [Symbol(kRejectNonStandardBodyWrites)]: false,

    [Symbol(kUniqueHeaders)]: null

  },

  body: {},

  route: Route {

    path: '/api/user/:id',

    stack: [ [Layer] ],

    methods: { get: true }

  },

  [Symbol(kCapture)]: false,

  [Symbol(kHeaders)]: {

    host: 'localhost:3000',

    connection: 'keep-alive',

    'sec-ch-ua': '"Not/A)Brand";v="99", "Google Chrome";v="115", "Chromium";v="115"',

    'sec-ch-ua-mobile': '?0',

    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36',

    'sec-ch-ua-platform': '"macOS"',

    accept: '*/*',

    origin: 'http://localhost:4200',

    'sec-fetch-site': 'same-site',

    'sec-fetch-mode': 'cors',

    'sec-fetch-dest': 'empty',

    referer: 'http://localhost:4200/',

    'accept-encoding': 'gzip, deflate, br',

    'accept-language': 'en-US,en;q=0.9,fr;q=0.8'

  },

  [Symbol(kHeadersCount)]: 28,

  [Symbol(kTrailers)]: null,

  [Symbol(kTrailersCount)]: 0

}

user error -  Please provide a token

​
